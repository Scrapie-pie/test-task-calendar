@import "main";
@import "_mixins";
@import "_normalize";
//@include setup-font('../fonts', 'PFDinDisplayPro', ('woff', 'ttf', 'eot'));
@import url('https://fonts.googleapis.com/css?family=Montserrat:100,200,300,400,500,600,700');

:root {
  @include css-variables;
}

html {
  box-sizing: border-box !important;
  $min_width: 280px;
  $max_width: get-var(container);
  $min_font: 11px;
  $max_font:  get-var(font-size, base);
  @include to-responsive(font-size, $min_font, $max_font, $min_width, $max_width);
}

body {
  height: 100%;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  margin: 0;
  font-family: Montserrat, Helvetica, Arial, sans-serif;
}

figure {
  margin: 0;
}

p {
  margin-top: 0;
  margin-bottom: 0;

  &:first-child {
    // margin-top: 0;
  }

  & + p {
    margin-top: 1.1em;
  }
}

a {
  color: inherit;
  text-decoration: none;
}

.view {
	display: flex;
	flex-direction: column;
	min-height: 100vh;

	header {
		flex-shrink: 0;
	}

	main {
		flex-grow: 1;
	}

	footer {
		flex-shrink: 0;
	}
}

*:not(.icon),
*::before,
*::after {
  box-sizing: inherit;
}

.container,
div[class="container"],
div[class$="__container"] {
  @include container;
}

@for $i from 1 through 6 {
  h#{$i} {
    margin-top: 0;
    $weight: 700;
    // @if ($i == 2) {
    //   $weight: 700;
    // } @else if ($i == 4) {
    //   $weight: 300;
    // }
    //@include h($i, $weight: $weight, $margin-bottom: get-var(space, micro-xxl));
    @include h($i, $weight: $weight, $margin-bottom: get-var(space, xs));
  }

  // .font_size_#{$i} {
  //   @include h($i, $margin-bottom: null); // mb compare
  // }

  .h#{$i} {
    @include h($i, $weight: 700); // mb compare
  }
  // .font_type_#{$i} {
  //   @include h($i, get-var(color, black)); // mb compare
  // }
}

@for $i from 1 through 9 {
  .font_weight_#{$i} {
    font-weight: #{$i}00;
  }
}

input, select {
  @include h(5);
  padding: 10px 15px;
  background: get-var(color, grey);
  border: 1px solid get-var(color, grey_dark);
  border-radius: 8px;
  outline: none;
}

input {
  &[type="date"] {
    color: rgba(0, 0, 0, 0.3);
    max-width: 220px;
    width: 100%;
  }
  &[type="text"] {
    max-width: 490px;
    width: 100%;
  }
  &::placeholder {
    color: rgba(0, 0, 0, 0.3);
  }
}

select {
  max-width: 220px;
  width: 100%;
}

//
// @keyframes fadeIn {
// 	from { opacity: 0 }
// 	to   { opacity: 1 }
// }

//
// @keyframes fadeOut {
// 	from { opacity: 1 }
// 	to   { opacity: 0 }
// }

//
// .animation-fade-in {
// 	animation: fadeIn 250ms ease-in-out both;
// }
//
// .animation-fade-out {
// 	animation: fadeOut 250ms ease-in-out both;
// }
